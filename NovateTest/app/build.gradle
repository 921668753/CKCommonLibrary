apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.3'

    defaultConfig {
        applicationId "com.ruitukeji.novate"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64", 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    //签名配置signingConfigs一定要在buildTypes前
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file('ruitu.keystore')
            storePassword "111111"
            keyAlias "ruitukeji"
            keyPassword "111111"
        }
    }

    //打包配置
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            shrinkResources false
            // 是否进行混淆
            minifyEnabled false
            // 签名文件的位置
            signingConfig signingConfigs.debug
            buildConfigField "String", "BAIDU_APPKEY", "\"lIYGHXEb5pZTGFNcNiy4qPnKstmzveEM\""
            buildConfigField "String", "WEIXIN_APPKEY", "\"wx444bb74a6d803478\""
            buildConfigField "String", "WEIXIN_APPSECRET", "\"8422d3feec9a93d0dd9465331715c963\""
            buildConfigField "String", "QQ_APPID", "\"1106322329\""
            buildConfigField "String", "QQ_APPKEY", "\"r8ko1f5pTrpZcFdY\""
            buildConfigField "String", "HUANXIN_APPKEY", "\"1102170901115301#shahaizi\""
            buildConfigField "String", "HUANXIN_TENANTID", "\"46895\""
            buildConfigField "String", "HUANXIN_PROJECTID", "\"2169000\""
            buildConfigField "String", "HUANXIN_IM", "\"shahaizi_kefu_001\""
            // 混淆文件的位置
            proguardFiles 'proguard-rules.pro'
        }
        release {
            debuggable false
            jniDebuggable false
            multiDexEnabled true
            zipAlignEnabled true
            shrinkResources true
            // 是否进行混淆
            minifyEnabled true
            // 签名文件的位置
            signingConfig signingConfigs.release
            buildConfigField "String", "BAIDU_APPKEY", "\"lIYGHXEb5pZTGFNcNiy4qPnKstmzveEM\""
            buildConfigField "String", "WEIXIN_APPKEY", "\"wx444bb74a6d803478\""
            buildConfigField "String", "WEIXIN_APPSECRET", "\"8422d3feec9a93d0dd9465331715c963\""
            buildConfigField "String", "QQ_APPID", "\"1106322329\""
            buildConfigField "String", "QQ_APPKEY", "\"r8ko1f5pTrpZcFdY\""
            buildConfigField "String", "HUANXIN_APPKEY", "\"1102170901115301#shahaizi\""
            buildConfigField "String", "HUANXIN_TENANTID", "\"46895\""
            buildConfigField "String", "HUANXIN_PROJECTID", "\"2169000\""
            buildConfigField "String", "HUANXIN_IM", "\"shahaizi_kefu_001\""
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // proguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        // disable 'InvalidPackage'
        //lint 遇到 error 时继续 构建
        abortOnError false
        //build release 版本 时 开启lint 检测
        checkReleaseBuilds false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'deprecation' //忽略错误
        disable 'unchecked' //忽略错误
        //  disable 'w' //忽略错误
        disable 'MissingTranslation'
    }

    dexOptions {
        preDexLibraries = false
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:27.0.2'
}

dependencies {
    // implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: 'libs', exclude: ['android-support*.jar'])
    //    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    //        exclude group: 'com.android.support', module: 'support-annotations'
    //    })
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:transition:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    /**
     * http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/1223/3796.html
     * http://blog.csdn.net/fan7983377/article/details/73850282
     * 解决 64K 限制，方法数超过65535解决方法
     * https://github.com/mmadev/multidex-sample
     */
    implementation 'com.android.support:multidex:1.0.2'
    //让应用支持多DEX文件
    implementation 'com.android.support:multidex-instrumentation:1.0.2'
    //让应用支持多DEX文件
    //  implementation project(':CKlibrary')
    implementation project(':cklibrary')
}
